---
# - name: "HIGH | unix_92645 | The Apache web server must provide install options to exclude the installation of documentation, sample code, example applications, and tutorials"
#   block:
#       - name: "HIGH | unix_92645 | The Apache web server must provide install options to exclude the installation of documentation, sample code, example applications, and tutorials | List items in httpd folder"
#         command: ls /etc/httpd
#         register: unix_92645_httpd_files
#         when:
#             - ansible_distribution == "RedHat"

#       - name: "HIGH | unix_92645 | The Apache web server must provide install options to exclude the installation of documentation, sample code, example applications, and tutorials | Display contents of httpd folder"
#         debug:
#             msg:
#                 - "Below is the folder list of items in your httpd folder"
#                 - "Review the contents with your ISSO for approval"
#                 - "{{ unix_92645_httpd_files.stdout_lines }}"
#         when:
#             - ansible_distribution == "RedHat"

#       - name: "HIGH | unix_92645 | The Apache web server must provide install options to exclude the installation of documentation, sample code, example applications, and tutorials | List available sites"
#         command: ls /etc/apache2/sites-available
#         register: unix_92645_apache_sites
#         when:
#             - ansible_distribution == "Ubuntu"

#       - name: "HIGH | unix_92645 | The Apache web server must provide install options to exclude the installation of documentation, sample code, example applications, and tutorials | Display available sites"
#         debug:
#             msg:
#                 - "Below is the list of available sites"
#                 - "review your /etc/Apache2 folder with your ISSO for approval"
#                 - "{{ unix_92645_apache_sites.stdout_lines }}"
#         when:
#             - ansible_distribution == "Ubuntu"

# - name: "PRELIM | {{ apache_passwd_tasks }} | Parse /etc/passwd"
#   block:
#       - name: "PRELIM | {{ apache_passwd_tasks }} | Parse /etc/passwd"
#         command: cat /etc/passwd
#         changed_when: no
#         check_mode: no
#         register: apache_passwd_file_audit

#       - name: "PRELIM | {{ apache_passwd_tasks }} | Split passwd entries"
#         set_fact:
#             apache_passwd: "{{ apache_passwd_file_audit.stdout_lines | map('regex_replace', ld_passwd_regex, ld_passwd_yaml) | map('from_yaml') | list }}"

#         with_items: "{{ apache_passwd_file_audit.stdout_lines }}"
#         vars:
#             ld_passwd_regex: >-
#                 ^(?P<id>[^:]*):(?P<password>[^:]*):(?P<uid>[^:]*):(?P<gid>[^:]*):(?P<gecos>[^:]*):(?P<dir>[^:]*):(?P<shell>[^:]*)
#             ld_passwd_yaml: |
#                 id: >-4
#                     \g<id>
#                 password: >-4
#                     \g<password>
#                 uid: \g<uid>
#                 gid: \g<gid>
#                 gecos: >-4
#                     \g<gecos>
#                 dir: >-4
#                     \g<dir>
#                 shell: >-4
#                     \g<shell>

# - name: "HIGH | unix_92673 | Apache web server application directories, libraries, and configuration files must only be accessible to privileged users."
#   debug:
#       msg:
#           - "Below is the list of users with their user levels"
#           - "{{ apache_passwd }}"

# - name: httpd file path
#   shell: httpd -V | egrep -i 'httpd_root|server_config_file'
#   register: httpd_path

# - debug: var=httpd_path

# - name: "HIGH | unix_92751 | The account used to run the Apache web server must not have a valid login shell and password defined"
#   block:
#       - name: "HIGH | unix_92751 | The account used to run the Apache web server must not have a valid login shell and password defined | Find httpd user"
#         shell: cat /etc/httpd/conf/httpd.conf | grep 'User ' | cut -f2 -d ' '
#         changed_when: no
#         register: httpd_users
#         when: httpd_server
      
#       - name: "HIGH | unix_92751 | The account used to run the Apache web server must not have a valid login shell and password defined | Apply /sbin/nologin to httpd users"
#         user:
#             name: "{{ item }}"
#             shell: /sbin/nologin
#         with_items:
#             - "{{ httpd_users.stdout_lines }}"
#         when: httpd_server

#       - name: "HIGH | unix_92751 | The account used to run the Apache web server must not have a valid login shell and password defined | Find apache users"
#         shell: cat /etc/apache2/envvars | grep APACHE_RUN_USER | cut -f2 -d=
#         changed_when: no
#         register: apache_users
#         when: not httpd_server

#       - name: "HIGH | unix_92751 | The account used to run the Apache web server must not have a valid login shell and password defined | Apply /sbin/nologin to apache users"
#         user:
#             name: "{{ item }}"
#             shell: /sbin/nologin
#         with_items:
#             - "{{ apache_users.stdout_lines }}"
#         when: not httpd_server
# - name: "MEDIUM | unix_92597 | The Apache web server must limit the number of allowed simultaneous session requests"
#   block:
#       - name: "MEDIUM | unix_92597 | The Apache web server must limit the number of allowed simultaneous session requests | Set KeepAlive to on"
#         lineinfile:
#             path: /etc/apache2/apache2.conf
#             regexp: '^KeepAlive '
#             line: "KeepAlive On"
#             insertafter: EOF

#       - name: "MEDIUM | unix_92597 | The Apache web server must limit the number of allowed simultaneous session requests | Set KeepAliveRequests to 100 or more"
#         lineinfile:
#             path: /etc/apache2/apache2.conf
#             regexp: ^MaxKeepAliveRequests
#             line: "MaxKeepAliveRequests {{ MaxKeepAliveRequests_count }}"
#             insertafter: EOF
# - name: "MEDIUM | unix_92607 | The Apache web server must have system logging enabled"
#   lineinfile:
#       path: /etc/apache2/envvars
#       regexp: '^export APACHE_LOG_DIR='
#       line: 'export APACHE_LOG_DIR={{ apache2_custom_log.path }}$SUFFIX'
#       insertafter: '# Only /var/log/apache2'
# - name: "MEDIUM |unix_92609 | The Apache web server must generate, at a minimum, log records for system startup and shutdown, system access, and system authentication events"
#   lineinfile:
#       path: /etc/apache2/apache2.conf
#       regexp: '# Use mod_remoteip instead'
#       line: 'LogFormat "%a %A %h %H %l %m %s %t %u %U \"%{Referer}i\" " common'
#       insertafter: '# Use mod_remoteip instead'
# - name: "MEDIUM | unix_92621 | An Apache web server, behind a load balancer or proxy server, must produce log records containing the client IP information as the source and destination and not the load balancer or proxy IP information with each event"
#   block:
#       - name: "MEDIUM | unix_92621 | An Apache web server, behind a load balancer or proxy server, must produce log records containing the client IP information as the source and destination and not the load balancer or proxy IP information with each event | Get source IP settings"
#         shell: cat /etc/apache2/apache2.conf | grep LogFormat
#         changed_when: false
#         register: source_ip_settings

#       - name: "MEDIUM | unix_92621 | An Apache web server, behind a load balancer or proxy server, must produce log records containing the client IP information as the source and destination and not the load balancer or proxy IP information with each event | Display source IP settings"
#         debug:
#             msg:
#                 - "Alert! Below are the current source log settings:"
#                 - "{{ source_ip_settings.stdout_lines }}"

# - name: Find apache2 log paths
#   shell: cat /etc/apache2/envvars | grep APACHE_LOG_DIR | cut -f2 -d= | cut -f1 -d$
#   changed_when: false
#   register: apache2_log_path
# - name: show me the path
#   debug: var=apache2_log_path

# - name: "MEDIUM | unix_92629 | The Apache web server log files must only be accessible by privileged users"
#   block:
#       - name: "MEDIUM | unix_92629 | The Apache web server log files must only be accessible by privileged users | Get list of log files"
#         shell: ls "{{ apache2_log_path.stdout }}"
#         changed_when: false
#         register: log_files

#       - name: "MEDIUM | unix_92629 | The Apache web server log files must only be accessible by privileged users | Set permissions on log files"
#         file:
#             path: "{{ apache2_log_path.stdout }}/{{ item }}"
#             owner: "{{ logs_owner.user }}"
#             group: "{{ logs_owner.group }}"
#             mode: "{{ logs_owner.perms }}"
#         with_items:
#             - "{{ log_files.stdout_lines }}"
#         when: log_files.stdout is defined
# - name: "MEDIUM | unix_92631 | The log information from the Apache web server must be protected from unauthorized modification or deletion"
#   block:
#       - name: "The log information from the Apache web server must be protected from unauthorized modification or deletion | Find log files"
#         shell: cat /etc/apache2/apache2.conf | grep 'ErrorLog ${' | cut -f2 -d}
#         changed_when: false
#         register: apache_92631_log_files

#       - name: "The log information from the Apache web server must be protected from unauthorized modification or deletion | Set permissions"
#         file:
#             path: "{{ apache2_log_path.stdout}}/{{ apache_92631_log_files.stdout}}"
#             owner: "{{ logs_owner.user }}"
#             mode: "{{ logs_owner.perms }}"

# - name: Register Apache2 document directory
#   shell: "grep -R DocumentRoot /etc/apache2/sites-enabled/ | cut -f2 -d : | cut -f2 -d ' '"
#   changed_when: false
#   register: apache2_doc_dir

# - name: show me the doc dir
#   debug: var=apache2_doc_dir

# - name: "MEDIUM | unix_92641 | The Apache web server must only contain services and functions necessary for operation"
#   block:
#       - name: "The Apache web server must only contain services and functions necessary for operation | Remove index.html from documents root directory"
#         file:
#             path: "{{ apache2_doc_dir.stdout }}/index.html"
#             state: absent

#       - name: "MEDIUM | unix_92641 | The Apache web server must only contain services and functions necessary for operation | Verify Manual content is removed"
#         apt:
#             name: apache2-doc
#             state: absent

#       - name: "MEDIUM | unix_92641 | The Apache web server must only contain services and functions necessary for operation | Alert on Server Status handler and Server Information handler"
#         debug:
#             msg:
#                 - "Alert! Please review the configuration files and remove/comment out to disable Server Status handler"
#                 - "Alert! Please review the configuration files and remove/comment out to disable Server Infomration handler"
#                 - "Alert! Please review the configuration files and remove/comment out to disable any other hanlders such as perl-status"

# - name: "MEDIUM | unix_92661 | The Apache web server must be configured to use a specified IP address and port"
#   replace:
#       path: /etc/apache2/ports.conf
#       regexp: '^Listen(.*?).*'
#       replace: 'Listen {{ ansible_facts.default_ipv4.address }}:{{ listen_port }}'
# - name: "MEDIUM | unix_92659 | The Apache web server must have Web Distributed Authoring (WebDAV) disabled"
#   command: a2dismod "{{ item }}"
#   failed_when: false
#   with_items:
#       - dav_fs
#       - dav_lock
#       - dav

# - name: "MEDIUM | unix_92643 | The Apache web server must not be a proxy server"
#   command: a2dismod "{{ item }}"
#   with_items:
#       - proxy
#       - proxy_ajp
#       - proxy_balancer
#       - proxy_ftp
#       - proxy_http
#       - proxy_connect
# - name: "MEDIUM | unix_92697 | The Apache web server must be tuned to handle the operational requirements of the hosted application"
#   lineinfile:
#       path: /etc/apache2/apache2.conf
#       regexp: '^Timeout '
#       line: 'Timeout = 10'
#       insertafter: '# Timeout: '

# - name: "MEDIUM | unix_92699 | Warning and error messages displayed to clients must be modified to minimize the identity of the Apache web server, patches, loaded modules, and directory paths"
#   lineinfile:
#       path: /etc/apache2/sites-enabled/000-default.conf
#       line: '        {{ item }}'
#       insertafter: '(.*?)CustomLog '
#   with_items:
#       - "{{ custom_error_messages }}"
# - name: "MEDIUM | unix_92701 | Debugging and trace information used to diagnose the Apache web server must be disabled"
#   block:
#       - name: "MEDIUM | unix_92701 | Debugging and trace information used to diagnose the Apache web server must be disabled | Set LogLevel"
#         lineinfile:
#             path: /etc/apache2/apache2.conf
#             regexp: '^LogLevel(.*?).*'
#             line: 'LogLevel info'
#             insertbefore: ^# Include module configuration

#       - name: "MEDIUM | unix_92701 | Debugging and trace information used to diagnose the Apache web server must be disabled | Set TraceEnable"
#         lineinfile:
#             path: /etc/apache2/apache2.conf
#             regexp: '^TraceEnable(.*?).*'
#             line: 'TraceEnable Off'
#             insertafter: '^LogLevel '
# - name: "MEDIUM | unix_92705 | The Apache web server must set an inactive timeout for sessions"
#   block:
#       - name: "MEDIUM | unix_92705 | The Apache web server must set an inactive timeout for sessions | Enable Reqtimeout module"
#         command: a2enmod reqtimeout

#       - name: "MEDIUM | unix_92705 | The Apache web server must set an inactive timeout for sessions | Set RequestReadTimeout setting"
#         lineinfile:
#             path: /etc/apache2/mods-enabled/reqtimeout.conf
#             regexp: '(.*?)RequestReadTimeout body'
#             line: '        RequestReadTimeout {{ RequestReadTimeout.apache2 }}'
#             insertbefore: '^</IfModule>'
# - name: |
#         "MEDIUM | unix_92727 | The Apache web server must prohibit or restrict the use of nonsecure or unnecessary ports, protocols, modules, and/or services"
#         "LOW | unix_92753 | The Apache web server must be configured in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs"
#   block:
#       - name: "MEDIUM | unix_92727 | The Apache web server must prohibit or restrict the use of nonsecure or unnecessary ports, protocols, modules, and/or services | Get httpd Listen port"
#         shell: cat /etc/apache2/ports.conf | grep "Listen" | grep -v "#"
#         changed_when: false
#         failed_when: no
#         register: apache_92727_httpd_listenPort

#       - name: "MEDIUM | unix_92727 | The Apache web server must prohibit or restrict the use of nonsecure or unnecessary ports, protocols, modules, and/or services | Get Virutal Host ports"
#         shell: cat /etc/apache2/sites-enabled/000-default.conf | grep "VirtualHost" | grep -v "#"
#         changed_when: false
#         failed_when: false
#         register: apache_92727_vhost_port

#       - name: "MEDIUM | unix_92727 | The Apache web server must prohibit or restrict the use of nonsecure or unnecessary ports, protocols, modules, and/or services | Alert on ports used"
#         debug:
#             msg:
#                 - "Alert! Below are the ports being used for the webserver. Make sure they adhere to IANA well known ports"
#                 - "Apache2 Listen ports: {{ apache_92727_httpd_listenPort.stdout_lines }}"
#                 - "Apache2 virtual hosts ports: {{ apache_92727_vhost_port.stdout_lines }}"
# - name: "MEDIUM | unix_92731 | The Apache web server must be protected from being stopped by a non-privileged user"
#   block:
#       - name: "MEDIUM | unix_92731 | The Apache web server must be protected from being stopped by a non-privileged user | Get httpd.pid location"
#         command: find / -name "apache2.pid"
#         changed_when: false
#         failed_when: false
#         register: apache_92731_apache2_pid_loc

#       - name: "MEDIUM | unix_92731 | The Apache web server must be protected from being stopped by a non-privileged user | Set httpd.pid file permissions"
#         file:
#             path: "{{ apache_92731_apache2_pid_loc.stdout }}"
#             owner: "{{ apache_service_user.apache2 }}"
#             mode: 0644

#       - name: "MEDIUM | unix_92731 | The Apache web server must be protected from being stopped by a non-privileged user | Set apachectl permissions"
#         file:
#             path: /usr/sbin/apachectl
#             owner: "{{ apache_service_user.apache2 }}"
#             mode: 0755
# - name: "MEDIUM | unix_92745 | The Apache web server must remove all export ciphers to protect the confidentiality and integrity of transmitted information"
#   block:
#       - name: "MEDIUM | unix_92745 | The Apache web server must remove all export ciphers to protect the confidentiality and integrity of transmitted information | Install SSL and socache_shmcb modules"
#         command: 'a2enmod {{ item }}'
#         with_items:
#             - socache_shmcb
#             - ssl

#       - name: "MEDIUM | unix_92745 | The Apache web server must remove all export ciphers to protect the confidentiality and integrity of transmitted information | Set SSL Setting"
#         lineinfile:
#             path: /etc/apache2/mods-enabled/ssl.conf
#             regexp: '(.*?)SSLProtocol.*'
#             line: '        SSLProtocol -ALL +TLSv1.2'
#             insertbefore: '</IfModule>'

#       - name: "MEDIUM | unix_92745 | The Apache web server must remove all export ciphers to protect the confidentiality and integrity of transmitted information | Get SSLCACertificateFile path"
#         shell: cat /etc/apache2/sites-available/default-ssl.conf | grep -h "SSLCACertificateFile" | grep -v '#' | sed 's/^[ \t]*//;s/[ \t]*$//' | cut -f2 -d ' '
#         changed_when: false
#         failed_when: false
#         register: apache_92745_sslcacertifcatefile_path

#       - name: "MEDIUM | unix_92745 | The Apache web server must remove all export ciphers to protect the confidentiality and integrity of transmitted information | Set SSLCACertificateFile parameter"
#         lineinfile:
#             path: /etc/apache2/sites-available/default-ssl.conf
#             regexp: '(.*?)SSLCACertificateFile.*'
#             line: '                SSLCACertificateFile {{ sslacertificatefile_settings.path }}/{{ sslacertificatefile_settings.file }}'
#             insertafter: '(.*?)</Directory>'
#         when: apache_92745_sslcacertifcatefile_path.stdout == ""
      
#       - name: "MEDIUM | unix_92745 | The Apache web server must remove all export ciphers to protect the confidentiality and integrity of transmitted information | Get SSLCACertificateFile path"
#         shell: cat /etc/apache2/sites-available/default-ssl.conf | grep -h "SSLCACertificateFile" | grep -v '#' | sed 's/^[ \t]*//;s/[ \t]*$//' | cut -f2 -d ' '
#         changed_when: false
#         failed_when: false
#         register: apache_92745_sslcacertifcatefile_path

#       - name: "MEDIUM | unix_92745 | The Apache web server must remove all export ciphers to protect the confidentiality and integrity of transmitted information | Get CA cert list"
#         command: cat {{ apache_92745_sslcacertifcatefile_path.stdout }}
#         changed_when: false
#         failed_when: false
#         register: apache_92745_ca_bundle_list
#         when: apache_92745_sslcacertifcatefile_path.stdout != ""

#       - name: "MEDIUM | unix_92745 | The Apache web server must remove all export ciphers to protect the confidentiality and integrity of transmitted information | List CA cert list"
#         debug:
#             msg:
#                 - "Alert! Below are the list of CA's, please make sure they are DoD approved"
#                 - "{{ apache_92745_ca_bundle_list.stdout_lines }}"
#         when: apache_92745_ca_bundle_list.stdout != ""

#       - name: "MEDIUM | unix_92745 | The Apache web server must remove all export ciphers to protect the confidentiality and integrity of transmitted information | Warn no CA cert list"
#         debug:
#             msg:
#                 - "Warning! You have no CA's, please remedy"
#         when: apache_92745_ca_bundle_list.stdout == ""
# - name: "MEDIUM | unix_92749 | The Apache web server must install security-relevant software updates within the configured time period directed by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs)"
#   block:
#       - name: "MEDIUM | unix_92749 | The Apache web server must install security-relevant software updates within the configured time period directed by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs) | Check installed version number"
#         shell: apache2 -v | grep -i "version" | cut -f2 -d/ | cut -f1 -d'(' | sed 's/^[ \t]*//;s/[ \t]*$//'
#         changed_when: false
#         register: apache_92749_apache_version

#       - name: "MEDIUM | unix_92749 | The Apache web server must install security-relevant software updates within the configured time period directed by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs) | Check available version number"
#         shell: apt show apache2 | grep Version | cut -f2 -d' ' | cut -f1 -d-
#         changed_when: false
#         register: apache_92749_apache_version_available

#       - debug: var=apache_92749_apache_version
#       - debug: var=apache_92749_apache_version_available
#       - name: "MEDIUM | unix_92749 | The Apache web server must install security-relevant software updates within the configured time period directed by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs) | Alert you are on the latest"
#         debug:
#             msg:
#                 - "Good News! You are on the latest version of Apache"
#         when: apache_92749_apache_version.stdout == apache_92749_apache_version_available.stdout

#       - name: "MEDIUM | unix_92749 | The Apache web server must install security-relevant software updates within the configured time period directed by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs) | Alert you are not on the latest"
#         debug:
#             msg:
#                 - "Alert! You are NOT on the latest version of Apache. You should be no more than 1 version behind"
#                 - "Installed version: {{ apache_92749_apache_version.stdout }}"
#                 - "available version: {{ apache_92749_apache_version_available.stdout }}"
#         when: apache_92749_apache_version.stdout != apache_92749_apache_version_available.stdout

#       - name: "MEDIUM | unix_92749 | The Apache web server must install security-relevant software updates within the configured time period directed by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs) | Update to latest"
#         apt:
#             name: apache2
#             state: latest
#         when:
#             - apache_92749_apache_version.stdout != apache_92749_apache_version_available.stdout
#             - automate_apache_version_update
# - name:  "MEDIUM | unix_92757 | The Apache web server htpasswd files (if present) must reflect proper ownership and permissions"
#   block:
#       - name:  "MEDIUM | unix_92757 | The Apache web server htpasswd files (if present) must reflect proper ownership and permissions | Find htpasswd file"
#         command: find / -name htpasswd
#         changed_when: no
#         register: apache_92757_htpasswd_loc
#       - debug: var=apache_92757_htpasswd_loc

#       - name:  "MEDIUM | unix_92757 | The Apache web server htpasswd files (if present) must reflect proper ownership and permissions | Set permissions"
#         file:
#             path: "{{ item }}"
#             owner: "{{ sys_admin_account }}"
#             mode: 0550
#         with_items:
#             - "{{ apache_92757_htpasswd_loc.stdout_lines }}"

# - name: "MEDIUM | unix_92653 | The Apache web server must have resource mappings set to disable the serving of certain file types"
#   block:
#       - name: "MEDIUM | unix_92653 | The Apache web server must have resource mappings set to disable the serving of certain file types | Remove AddHandler settings"
#         lineinfile:
#             path: /etc/apache2/sites-available/000-default.conf
#             regexp: '(.*?)AddHandler cgi-script {{ item }}'
#             state: absent
#         with_items:
#             - .exe
#             - .dll
#             - .com
#             - .bat
#             - .csh

#       - name: "MEDIUM | unix_92653 | The Apache web server must have resource mappings set to disable the serving of certain file types | Remove Action settings"
#         lineinfile:
#             path: /etc/apache2/sites-available/000-default.conf
#             regexp: '(.*?)Action {{ item }}.*'
#             state: absent
#         with_items:
#             - .exe
#             - .dll
#             - .com
#             - .bat
#             - .csh

# - name: "MEDIUM | unix_92679 | Cookies exchanged between the Apache web server and client, such as session cookies, must have security settings that disallow cookie access outside the originating Apache web server and hosted application"
#   block:
#       - name: "MEDIUM | unix_92679 | Cookies exchanged between the Apache web server and client, such as session cookies, must have security settings that disallow cookie access outside the originating Apache web server and hosted application | Enable Headers module"
#         command: a2enmod headers
#         register: apache_92679_header_module
#         changed_when: "'Enabling' in apache_92679_header_module.stdout"

#       - name: "MEDIUM | unix_92679 | Cookies exchanged between the Apache web server and client, such as session cookies, must have security settings that disallow cookie access outside the originating Apache web server and hosted application | Register no HttpOnly and secure"
#         shell: cat /etc/apache2/apache2.conf | grep -i "set-cookie" | grep -ivE 'httponly|secure' | sed 's/^[ \t]*//;s/[ \t]*$//'
#         changed_when: false
#         register: apache_92679_no_httponly_secure

#       - name: "MEDIUM | unix_92679 | Cookies exchanged between the Apache web server and client, such as session cookies, must have security settings that disallow cookie access outside the originating Apache web server and hosted application | Register only HttpOnly"
#         shell: cat /etc/apache2/apache2.conf | grep -i "set-cookie" | grep -i 'httponly' | grep -v 'secure' | sed 's/^[ \t]*//;s/[ \t]*$//'
#         changed_when: false
#         register: apache_92679_no_secure_only
#         when: apache_92679_no_httponly_secure.stdout == ""

#       - name: "MEDIUM | unix_92679 | Cookies exchanged between the Apache web server and client, such as session cookies, must have security settings that disallow cookie access outside the originating Apache web server and hosted application | Register only secure"
#         shell: cat /etc/apache2/apache2.conf | grep -i "set-cookie" | grep -i 'secure' | grep -iv 'httponly' | sed 's/^[ \t]*//;s/[ \t]*$//'
#         changed_when: false
#         register: apache_92679_no_httponly_only
#         when: apache_92679_no_httponly_secure.stdout == ""

#       - name: "MEDIUM | unix_92679 | Cookies exchanged between the Apache web server and client, such as session cookies, must have security settings that disallow cookie access outside the originating Apache web server and hosted application | Add both HttpOnly and secure"
#         lineinfile:
#             path: /etc/apache2/apache2.conf
#             regexp: '(.*?)Header edit Set-Cookie.*'
#             line: '        {{ apache_92679_no_httponly_secure.stdout}};HttpOnly;secure'
#         when: apache_92679_no_httponly_secure.stdout != ""

#       - name: "MEDIUM | unix_92679 | Cookies exchanged between the Apache web server and client, such as session cookies, must have security settings that disallow cookie access outside the originating Apache web server and hosted application | Add both HttpOnly and secure"
#         lineinfile:
#             path: /etc/apache2/apache2.conf
#             regexp: '(.*?)Header edit Set-Cookie.*'
#             line: '        {{ apache_92679_no_secure_only.stdout}};secure'
#         when: 
#             - apache_92679_no_httponly_secure.stdout == ""
#             - apache_92679_no_secure_only.stdout != ""

#       - name: "MEDIUM | unix_92679 | Cookies exchanged between the Apache web server and client, such as session cookies, must have security settings that disallow cookie access outside the originating Apache web server and hosted application | Add both HttpOnly and secure"
#         lineinfile:
#             path: /etc/apache2/apache2.conf
#             regexp: '(.*?)Header edit Set-Cookie.*'
#             line: '        {{ apache_92679_no_httponly_only.stdout}};HttpOnly'
#         when: 
#             - apache_92679_no_httponly_secure.stdout == ""
#             - apache_92679_no_httponly_only.stdout != ""
# - name: "MEDIUM | unix_92687 | The Apache web server must generate a session ID long enough that it cannot be guessed through brute force"
#   block:
#       - name: "MEDIUM | unix_92687 | The Apache web server must generate a session ID long enough that it cannot be guessed through brute force | Find no aes256 cipher"
#         shell: cat /etc/apache2/mods-enabled/ssl.conf | grep -i "SSLCipherSuite" | grep -iv "aes256" | grep -v "#" | sed 's/^[ \t]*//;s/[ \t]*$//'
#         changed_when: false
#         failed_when: false
#         register: apache_92687_no_aes256
#       - debug: var=apache_92687_no_aes256

#       - name: "MEDIUM | unix_92687 | The Apache web server must generate a session ID long enough that it cannot be guessed through brute force | Set aes256"
#         lineinfile:
#             path: /etc/apache2/mods-enabled/ssl.conf
#             regexp: (.*?){{ apache_92687_no_aes256.stdout }}
#             line: '        {{ apache_92687_no_aes256.stdout }}:aes256'
#             insertbefore: '</IfModule>'
#         when: apache_92687_no_aes256.stdout != ""
# - name: "MEDIUM | unix_92599 | The Apache web server must perform server-side session management"
#   command: a2enmod {{ item }}
#   register: apache_926599_mod_enabled
#   changed_when: "'Enabling' in apache_926599_mod_enabled.stdout"
#   with_items:
#       - usertrack
#       - session
# - name: Find $CATALINA_HOME directory
#   shell: cat /etc/systemd/system/tomcat.service | grep "CATALINA_HOME" | cut -f3 -d= | tr -d '"'
#   changed_when: false
#   register: catalina_find_home_dir
# - debug: var=catalina_find_home_dir

# - name: "MEDIUM | TCAT-AS-001590 | PATCH | Changes to $CATALINA_HOME/bin/ folder must be logged."
#   command: auditctl  -w {{ catalina_find_home_dir.stdout }}/bin -p wa -k tomcat
#   register: tcat_001590_bin_logging
#   failed_when: "'FAILED' in tcat_001590_bin_logging.stderr"
#   # changed_when: tcat_001590_bin_logging.rc == 0
# - debug: var=tcat_001590_bin_logging
# - debug: var=ansible_facts

# # this control makes it so you can't get run commands in postgres user 
# - name: "SCORED | 2.2 | PATCH | Ensure the PostgreSQL pg_wheel group membership is correct"
#   block:
#       - name: "SCORED | 2.2 | PATCH | Ensure the PostgreSQL pg_wheel group membership is correct | Create pg_wheel group"
#         group:
#             name: pg_wheel
#             state: present

#       - name: "SCORED | 2.2 | PATCH | Ensure the PostgreSQL pg_wheel group membership is correct"
#         user:
#             name: "{{ pgs12cis_pgs12_usr }}"
#             groups: pg_wheel
#             append: yes


# - name: "SCORED | 4.1 | PATCH | Ensure sudo is configured correctly"
#   block:
#       - name: "SCORED | 4.1 | PATCH | Ensure sudo is configured correctly | Configure pg_wheel to sudoers"
#         lineinfile:
#             path: /etc/sudoers.d/postgres
#             regexp: '^%pg_wheel ALL='
#             line: '%pg_wheel ALL= /bin/su - {{ pgs12cis_pgs12_usr }}'
#             create: yes

#       - name: "SCORED | 4.1 | PATCH | Ensure sudo is configured correctly | Set file permissions"
#         file:
#             path: /etc/sudoers.d/postgres
#             mode: 0600
# - name: "PRELIM | Install and Start PostgreSQL | RHEL/CentOS"
#   block:
#       - name: "PRELIM | Install and Start PostgreSQL | Add PostgreSQL Repo RHEL/CentOS 8"
#         dnf:
#           name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm
#           state: present
#         when: ansible_distribution_major_version == "8"

#       - name: "PRELIM | Install and Start PostgreSQL | Add PostgreSQL Repo RHEL/CentOS 7"
#         yum:
#             name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
#             state: present
#         when: ansible_distribution_major_version == "7"

#       - name: "PRELIM | Install and Start PostgreSQL | Disable built in PostgreSQL RHEL/CentOS 8"
#         shell: dnf -y module disable postgresql
#         register: prelim_disable_pgs_old_rh8
#         changed_when: "'Disabling modules' in prelim_disable_pgs_old_rh8.stdout"
#         when: ansible_distribution_major_version == "8"

#       - name: "PRELIM | Install and Start PostgreSQL | Disable built in PostgreSQL RHEL/CentOS 7"
#         shell: dnf -y module disable postgresql
#         register: prelim_disable_pgs_old_rh8
#         changed_when: "'Disabling modules' in prelim_disable_pgs_old_rh8.stdout"
#         when: ansible_distribution_major_version == "7"

#       - name: "PRELIM | Install and Start PostgreSQL | Install PostgreSQL 12 RHEL/CentOS 8"
#         dnf:
#           name: ['postgresql12', 'postgresql12-server']
#           state: present
#         when: ansible_distribution_major_version == "8"

#       - name: "PRELIM | Install and Start PostgreSQL | Install PostgreSQL 12 RHEL/CentOS 7"
#         dnf:
#           name: ['postgresql12', 'postgresql12-server']
#           state: present
#         when: ansible_distribution_major_version == "7"

#       - name: "PRELIM | Install and Start PostgreSQL | Initialize PostgreSQL 12 RHEL/CentOS 7 and 8"
#         command: /usr/pgsql-12/bin/postgresql-12-setup initdb
#         failed_when: false

#       - name: "PRELIM | PRELIM | Install and Start PostgreSQL | Start and enable service RHEL/CentOS 7 and 8"
#         service:
#             name: postgresql-12
#             enabled: yes
#             state: started

#       - name: "PRELIM | PRELIM | Install and Start PostgreSQL | Set postgres user pw"
#         user:
#             name: postgres
#             password: "{{ pgs12cis_postgres_user_pw }}"
#   when: ansible_distribution_file_variety == 'RedHat'

# - name: "PRELIM | Install and Start PostgreSQL | Ubuntu"
#   block:
#       - name: "PRELIM | Install and Start PostgreSQL | Install wget for future task | Ubuntu"
#         apt:
#             name: wget
#             state: present

#       - name: "PRELIM | Install and Start PostgreSQL | Get PostgreSQL GPG key | Ubuntu"
#         shell: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -

#       - name: "PRELIM | Install and Start PostgreSQL | Add PostgreSQL repo | Ubuntu"
#         shell: echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" |sudo tee  /etc/apt/sources.list.d/pgdg.list

#       - name: "PRELIM | Install and Start PostgreSQL | Install PostgreSQL 12 | Ubuntu"
#         apt:
#           name: ['postgresql-12','postgresql-client-12']
#           state: present
#           update_cache: yes

#       - name: "PRELIM | Install and Start PostgreSQL | Start and enable service | Ubuntu"
#         service:
#             name: postgresql
#             state: started
#             enabled: yes

#       - name: "PRELIM | Install and Start PostgreSQL | Change postgres user default password | Ubuntu"
#         command: psql -c "alter user postgres with password 'StrongAdminP@ssw0rd'"
#         become_user: postgres
#   when: ansible_distribution == 'Ubuntu'
- debug: var=ansible_facts